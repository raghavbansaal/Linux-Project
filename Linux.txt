Linux
DISK USAGE DASHBOARD:

Integrate LVM
TUI: Uses watch, du, df, or ncdu with visual display in terminal 
Overview: This project offers a visual representation of disk usage in a terminal-based 
interface. It utilizes commands like du, df, and optionally ncdu to summarize and display 
space consumption across directories and partitions. It can issue warnings when storage 
usage surpasses a certain threshold (e.g., 80%), encouraging users to clean up 
unnecessary files. This tool is valuable for keeping systems efficient and teaching students 
how to interpret disk statistics, manage storage effectively, and use text-based dashboards. 
Functions: Warns if partition is over 80%. Encourages disk monitoring practices. 



Here's how to test each LVM option in your script:

1. **First install LVM if not installed**:
```bash
sudo apt install lvm2 || sudo yum install lvm2
```

2. **Test Disk Usage (Option 1)**:
```bash
# Just select option 1 - it should show all mounted filesystems
```

3. **Test LVM Status (Option 2)**:
```bash
# First create a test LVM setup:
sudo fallocate -l 1G /testdisk.img
sudo losetup -fP /testdisk.img
sudo pvcreate /dev/loop0
sudo vgcreate testvg /dev/loop0
sudo lvcreate -L 500M -n testlv testvg

# Now select option 2 - should show your test volume
```

4. **Test Create LVM Volume (Option 3)**:
```bash
# Prepare test disk:
sudo fallocate -l 1G /testcreate.img
sudo losetup -fP /testcreate.img

# In script:
# Enter these values:
# Volume Group: testvg2
# Logical Volume: testlv2
# Size: 500M
# Device: /dev/loop1 (or whatever loop device was created)

# Verify creation:
sudo lvs
```

5. **Test Extend LVM Volume (Option 4)**:
```bash
# Use the volume created in previous test
# Enter these values:
# Logical Volume Path: /dev/testvg2/testlv2
# Size to add: +200M

# Verify extension:
sudo lvs
```

6. **Cleanup after testing**:
```bash
sudo lvremove /dev/testvg2/testlv2
sudo vgremove testvg2
sudo pvremove /dev/loop1
sudo losetup -d /dev/loop1
rm /testcreate.img

sudo lvremove /dev/testvg/testlv
sudo vgremove testvg
sudo pvremove /dev/loop0
sudo losetup -d /dev/loop0
rm /testdisk.img
```

**Testing Notes**:
- Run script with sudo: `sudo ./script.sh`
- All commands must be run as root
- Use `lsblk` to see available disks
- Use `sudo lvs`, `sudo vgs`, `sudo pvs` to verify operations
- For real disks, replace `/dev/loopX` with actual disk like `/dev/sdb`